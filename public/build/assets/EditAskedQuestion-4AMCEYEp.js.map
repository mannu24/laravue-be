{"version":3,"file":"EditAskedQuestion-4AMCEYEp.js","sources":["../../../resources/js/views/EditAskedQuestion.vue"],"sourcesContent":["<template>\n    <div class=\"max-w-3xl mx-auto py-8 px-4\">\n        <BackNavigator :items=\"editQuestionBreadcrumbs\" />\n        <Card class=\"overflow-hidden\">\n            <CardHeader>\n                <CardTitle>Edit Question</CardTitle>\n                <CardDescription>Update your question details</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <form @submit.prevent=\"submitEditedQuestion\" class=\"space-y-6\">\n                    <div class=\"space-y-2\">\n                        <Label for=\"title\">Question Title</Label>\n                        <Input v-model=\"question.title\" id=\"title\" type=\"text\"\n                            placeholder=\"e.g., How do I center a div in CSS?\" required />\n                        <p class=\"text-sm text-muted-foreground\">\n                            Be specific and imagine you're updating a question for others.\n                        </p>\n                    </div>\n\n                    <div class=\"space-y-2\">\n                        <Label for=\"content\">Question Details</Label>\n                        <MarkDownEditor v-model=\"question.content\"\n                            placeholder=\"Update the context about your question...\" :min-height=\"300\" />\n                        <p class=\"text-sm text-muted-foreground\">\n                            Include all the information someone would need to understand your updated question.\n                        </p>\n                    </div>\n\n                    <div class=\"space-y-2\">\n                        <Label>Tags</Label>\n                        <TagInput v-model=\"question.tags\" :max-tags=\"5\" placeholder=\"Update up to 5 tags\" />\n                        <p class=\"text-sm text-muted-foreground\">\n                            Update up to 5 tags to describe what your question is about.\n                        </p>\n                    </div>\n                </form>\n            </CardContent>\n            <CardFooter class=\"flex justify-between\">\n                <Button variant=\"outline\" @click=\"previewQuestion\">\n                    Preview\n                </Button>\n                <Button @click=\"submitEditedQuestion\" :disabled=\"isSubmitting\">\n                    {{ isSubmitting ? 'Updating...' : 'Update Question' }}\n                </Button>\n            </CardFooter>\n        </Card>\n\n        <QuestionPreviewModal v-if=\"showPreview\" :question=\"question\" @close=\"showPreview = false\" />\n    </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport axios from 'axios'\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport QuestionPreviewModal from '../components/qna/QuestionPreviewModal.vue'\nimport TagInput from '../components/elements/TagInput.vue'\nimport MarkDownEditor from '../components/elements/MarkDownEditor.vue'\nimport { toast } from '../components/ui/toast'\nimport { useAuthStore } from '../stores/auth'\nimport BackNavigator from '../components/elements/BackNavigator.vue'\n\nconst authStore = useAuthStore()\nconst router = useRouter()\nconst route = useRoute()\nconst isSubmitting = ref(false)\nconst showPreview = ref(false)\n\nconst editQuestionBreadcrumbs = [\n    { name: 'Questions', href: '/qna' },\n    { name: 'Edit', href: `/qna/edit/${route.params.slug}` }\n]\n\nconst question = ref({\n    title: '',\n    content: '',\n    tags: [],\n    id: null\n})\n\nonMounted(async () => {\n    await fetchQuestion()\n})\n\nconst fetchQuestion = async () => {\n    try {\n        const response = await axios.get(`/api/v1/questions/${route.params.slug}`, {\n            headers: {\n                Authorization: `Bearer ${authStore.token}`\n            }\n        })\n        const questionData = response.data.data.question\n        question.value = {\n            id: questionData.id,\n            title: questionData.title,\n            content: questionData.content,\n            tags: (questionData.tags || []).map(tag => tag.name)\n        }\n    } catch (error) {\n        console.error('Error fetching question:', error)\n        toast({\n            variant: 'destructive',\n            description: 'Failed to load question. Please try again.'\n        })\n        router.push('/qna')\n    }\n}\n\nconst submitEditedQuestion = async () => {\n    if (!validateForm()) return\n\n    try {\n        isSubmitting.value = true\n\n        const formData = new FormData()\n        formData.append(\"title\", question.value.title)\n        formData.append(\"content\", question.value.content)\n        formData.append(\"_method\", \"PUT\")\n        question.value.tags.forEach((tag, index) => {\n            formData.append(\"tags[]\", tag)\n        })\n\n        const response = await axios.post(`/api/v1/questions/${question.value.id}`, formData, {\n            headers: {\n                Authorization: `Bearer ${authStore.token}`,\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n\n        router.push(`/qna/${response.data.data.slug}`)\n        toast({\n            description: \"Your question has been successfully updated.\"\n        })\n    } catch (error) {\n        console.error('Error updating question:', error)\n        toast({\n            variant: 'destructive',\n            description: \"Failed to update question. Please try again.\"\n        })\n    } finally {\n        isSubmitting.value = false\n    }\n}\n\nconst validateForm = () => {\n    if (question.value.title.length < 15) {\n        toast({\n            variant: 'destructive',\n            description: \"Title should be at least 15 characters long.\"\n        })\n        return false\n    }\n    if (question.value.content.length < 30) {\n        toast({\n            variant: 'destructive',\n            description: \"Question details should be at least 30 characters long.\"\n        })\n        return false\n    }\n    if (question.value.tags.length < 1) {\n        toast({\n            variant: 'destructive',\n            description: \"At least 1 Tag is required!\"\n        })\n        return false\n    }\n    return true\n}\n\nconst previewQuestion = () => {\n    if (validateForm()) {\n        showPreview.value = true\n    }\n}\n</script>"],"names":["authStore","useAuthStore","router","useRouter","route","useRoute","isSubmitting","ref","showPreview","editQuestionBreadcrumbs","question","onMounted","fetchQuestion","questionData","axios","tag","error","toast","submitEditedQuestion","validateForm","formData","index","response","previewQuestion"],"mappings":"8sBAkEA,MAAMA,EAAYC,EAAY,EACxBC,EAASC,EAAS,EAClBC,EAAQC,EAAQ,EAChBC,EAAeC,EAAI,EAAK,EACxBC,EAAcD,EAAI,EAAK,EAEvBE,EAA0B,CAC5B,CAAE,KAAM,YAAa,KAAM,MAAQ,EACnC,CAAE,KAAM,OAAQ,KAAM,aAAaL,EAAM,OAAO,IAAI,EAAE,CAC1D,EAEMM,EAAWH,EAAI,CACjB,MAAO,GACP,QAAS,GACT,KAAM,CAAE,EACR,GAAI,IACR,CAAC,EAEDI,EAAU,SAAY,CAClB,MAAMC,EAAa,CACvB,CAAC,EAED,MAAMA,EAAgB,SAAY,CAC9B,GAAI,CAMA,MAAMC,GALW,MAAMC,EAAM,IAAI,qBAAqBV,EAAM,OAAO,IAAI,GAAI,CACvE,QAAS,CACL,cAAe,UAAUJ,EAAU,KAAK,EACxD,CACS,CAAA,GAC6B,KAAK,KAAK,SACxCU,EAAS,MAAQ,CACb,GAAIG,EAAa,GACjB,MAAOA,EAAa,MACpB,QAASA,EAAa,QACtB,MAAOA,EAAa,MAAQ,CAAE,GAAE,IAAIE,GAAOA,EAAI,IAAI,CAC/D,CACK,OAAQC,EAAO,CACZ,QAAQ,MAAM,2BAA4BA,CAAK,EAC/CC,EAAM,CACF,QAAS,cACT,YAAa,4CAChB,CAAA,EACDf,EAAO,KAAK,MAAM,CAC1B,CACA,EAEMgB,EAAuB,SAAY,CACrC,GAAKC,EAAY,EAEjB,GAAI,CACAb,EAAa,MAAQ,GAErB,MAAMc,EAAW,IAAI,SACrBA,EAAS,OAAO,QAASV,EAAS,MAAM,KAAK,EAC7CU,EAAS,OAAO,UAAWV,EAAS,MAAM,OAAO,EACjDU,EAAS,OAAO,UAAW,KAAK,EAChCV,EAAS,MAAM,KAAK,QAAQ,CAACK,EAAKM,IAAU,CACxCD,EAAS,OAAO,SAAUL,CAAG,CAChC,CAAA,EAED,MAAMO,EAAW,MAAMR,EAAM,KAAK,qBAAqBJ,EAAS,MAAM,EAAE,GAAIU,EAAU,CAClF,QAAS,CACL,cAAe,UAAUpB,EAAU,KAAK,GACxC,eAAgB,qBAChC,CACS,CAAA,EAEDE,EAAO,KAAK,QAAQoB,EAAS,KAAK,KAAK,IAAI,EAAE,EAC7CL,EAAM,CACF,YAAa,8CAChB,CAAA,CACJ,OAAQD,EAAO,CACZ,QAAQ,MAAM,2BAA4BA,CAAK,EAC/CC,EAAM,CACF,QAAS,cACT,YAAa,8CAChB,CAAA,CACT,QAAc,CACNX,EAAa,MAAQ,EAC7B,CACA,EAEMa,EAAe,IACbT,EAAS,MAAM,MAAM,OAAS,IAC9BO,EAAM,CACF,QAAS,cACT,YAAa,8CAChB,CAAA,EACM,IAEPP,EAAS,MAAM,QAAQ,OAAS,IAChCO,EAAM,CACF,QAAS,cACT,YAAa,yDAChB,CAAA,EACM,IAEPP,EAAS,MAAM,KAAK,OAAS,GAC7BO,EAAM,CACF,QAAS,cACT,YAAa,6BAChB,CAAA,EACM,IAEJ,GAGLM,EAAkB,IAAM,CACtBJ,EAAY,IACZX,EAAY,MAAQ,GAE5B"}