{"version":3,"file":"InfiniteScroll-CETJ7yJj.js","sources":["../../../node_modules/lucide-vue-next/dist/esm/icons/ellipsis-vertical.js","../../../resources/js/components/qna/QuestionCard.vue","../../../resources/js/components/ui/skeleton/Skeleton.vue","../../../resources/js/components/elements/InfiniteScroll.vue"],"sourcesContent":["/**\n * @license lucide-vue-next v0.474.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst EllipsisVertical = createLucideIcon(\"EllipsisVerticalIcon\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"12\", cy: \"5\", r: \"1\", key: \"gxeob9\" }],\n  [\"circle\", { cx: \"12\", cy: \"19\", r: \"1\", key: \"lyex9k\" }]\n]);\n\nexport { EllipsisVertical as default };\n//# sourceMappingURL=ellipsis-vertical.js.map\n","<script setup>\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from '@/components/ui/alert-dialog';\nimport axios from 'axios';\nimport { computed, defineEmits, defineProps, onMounted, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useAuthStore } from '../../stores/auth';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '../ui/card';\nimport { useToast } from '../ui/toast';\nimport { LucideEllipsisVertical } from 'lucide-vue-next';\n\nconst { toast } = useToast()\nconst element = ref(null)\nconst showDropdown = ref(false)\nconst { question } = defineProps(['question'])\nconst emit = defineEmits(['load_more', 'fetch', 'delete_question', 'liked_action', 'share_url'])\nconst router = useRouter();\nconst authStore = useAuthStore()\nconst question_url = computed(() => '/question/' + question.slug)\n\nconst goToQuestion = (id) => {\n    router.push({ name: 'question', params: { id } })\n}\n\nonMounted(() => {\n    if (element?.value?.classList.contains('last_item')) {\n        checkItem();\n    }\n});\n\nconst delete_record = async () => {\n    showDropdown.value = false\n    await axios.delete(`/api/v1/questions/${question.slug}`, authStore.config).then(() => {\n        emit('delete_question', question.slug)\n    })\n}\n\nconst checkItem = () => {\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n                emit('load_more')\n            }\n        });\n    });\n    observer.observe(element.value);\n}\n\nconst handleLike = async () => {\n    if (!authStore.isAuthenticated) {\n        router.push('/login')\n    }\n    else {\n        const response = await axios.get(`/api/v1/questions/like-unlike/${question.slug}`, authStore.config)\n        if (response.data.status == 'success') {\n            emit('liked_action', [question.slug, response.data.liked])\n        }\n        else {\n            toast({\n                title: \"Error\",\n                description: \"Something went wrong\",\n                variant: \"destructive\",\n            })\n        }\n    }\n};\n\nconst handleComment = () => {\n    if (!authStore.isAuthenticated) {\n        router.push('/login')\n    }\n    else {\n        router.push(question_url.value)\n    }\n};\n\nconst handleShare = () => {\n    emit('share_url', question_url.value)\n};\n\n</script>\n<template>\n    <Card :class=\"[\n        'mb-4 transition-colors duration-200',\n        'bg-white text-gray-800 border-gray-200',\n        'dark:bg-gray-800 dark:text-white dark:border-gray-700'\n    ]\">\n        <CardHeader>\n            <div class=\"flex items-center justify-between\">\n                <CardTitle class=\"text-xl font-bold\">\n                    <router-link :to=\"`/qna/${question.slug}`\" @click.prevent=\"goToQuestion(question.slug)\" :class=\"[\n                        'hover:underline',\n                        'text-blue-600 hover:text-blue-700',\n                        'dark:text-blue-400 dark:hover:text-blue-300'\n                    ]\">\n                        {{ question.title }}\n                    </router-link>\n                </CardTitle>\n                <div class=\"relative inline-block ml-auto self-start\" v-if=\"authStore.isAuthenticated && question.owner\">\n                    <p :title=\"'More Options'\" class=\"icon-hover text-gray-500 hover:bg-primary/20 hover:text-primary hover:bg-opacity-25\" @click.stop=\"showDropdown = !showDropdown\">\n                        <LucideEllipsisVertical />\n                    </p>\n                    <transition enter-active-class=\"transition ease-out duration-100\"\n                        enter-from-class=\"transform opacity-0 scale-95\" enter-to-class=\"transform opacity-100 scale-100\"\n                        leave-active-class=\"transition ease-in duration-75\"\n                        leave-from-class=\"transform opacity-100 scale-100\"\n                        leave-to-class=\"transform opacity-0 scale-95\">\n                        <div v-if=\"showDropdown\" v-click-outside=\"{ closeCondition: () => showDropdown, closeAction: () => showDropdown = false }\" class=\"absolute mt-1 right-2 z-10 w-32 origin-top-right divide-y divide-gray-100 rounded-md focus:outline-hidden\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"menu-button\" tabindex=\"-1\">\n                            <div class=\"\" role=\"none\">\n                                <!-- Active: \"bg-gray-100 text-gray-900 outline-hidden\", Not Active: \"text-gray-700\" -->\n                                <!-- <a href=\"#\" @click=\"action('duplicate')\" class=\"block px-4 py-2 text-sm text-gray-700 cursor-pointer transition-all duration-150 ease-in-out rounded-md bg-white dark:text-white dark:bg-gray-900 dark:hover:bg-gray-800/80 hover:bg-gray-200\">\n                                    <i class=\"fas fa-files mr-1\"></i>\n                                    Duplicate\n                                </a> -->\n                                <div @click.stop=\"$router.push('/qna/ask/' + question.slug)\"\n                                    class=\"block px-4 py-2 text-sm text-gray-700 cursor-pointer transition-all duration-150 ease-in-out rounded-md shadow dark:shadow-white/10 bg-white dark:text-white dark:bg-gray-900 dark:hover:bg-gray-800/80 hover:bg-gray-200 mb-1\">\n                                    <i class=\"fas fa-pencil-alt mr-1\"></i>\n                                    Edit\n                                </div>\n                                <AlertDialog>\n                                    <AlertDialogTrigger as-child>\n                                        <div @click.stop\n                                            class=\"block px-4 py-2 text-sm text-gray-700 cursor-pointer transition-all duration-150 ease-in-out rounded-md shadow dark:shadow-white/10 bg-white dark:text-white dark:bg-gray-900 dark:hover:bg-gray-800/80 hover:bg-gray-200\">\n                                            <i class=\"fas fa-trash mr-1\"></i> Delete\n                                        </div>\n                                    </AlertDialogTrigger>\n                                    <AlertDialogContent>\n                                        <AlertDialogHeader>\n                                            <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                                            <AlertDialogDescription>\n                                                This action cannot be undone. This will delete your post.\n                                            </AlertDialogDescription>\n                                        </AlertDialogHeader>\n                                        <AlertDialogFooter>\n                                            <AlertDialogCancel>Cancel</AlertDialogCancel>\n                                            <AlertDialogAction @click.stop=\"delete_record\">Continue</AlertDialogAction>\n                                        </AlertDialogFooter>\n                                    </AlertDialogContent>\n                                </AlertDialog>\n                            </div>\n                        </div>\n                    </transition>\n                        <!-- <div v-if=\"showDropdown\" :class=\"[\n                            'absolute right-0 z-10 mt-2 w-48 rounded-md shadow-lg ring-1 ring-black ring-opacity-5',\n                            'bg-white',\n                            'dark:bg-gray-700'\n                        ]\">\n                            <div class=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n                                <a @click.stop=\"$router.push('/qna/ask/' + question.slug)\" :class=\"[\n                                    'block px-4 py-2 text-sm',\n                                    'text-gray-700 hover:bg-gray-100 hover:text-gray-900',\n                                    'dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white'\n                                ]\" role=\"menuitem\">\n                                    <i class=\"fas fa-pencil-alt mr-2\"></i> Edit\n                                </a>\n                                <AlertDialog>\n                                    <AlertDialogTrigger as-child>\n                                        <a :class=\"[\n                                            'block px-4 py-2 text-sm',\n                                            'text-gray-700 hover:bg-gray-100 hover:text-gray-900',\n                                            'dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white'\n                                        ]\" role=\"menuitem\">\n                                            <i class=\"fas fa-trash mr-2\"></i> Delete\n                                        </a>\n                                    </AlertDialogTrigger>\n                                    <AlertDialogContent :class=\"[\n                                        'dark:bg-gray-800 dark:text-white',\n                                        'bg-white text-gray-800'\n                                    ]\">\n                                        <AlertDialogHeader>\n                                            <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                                            <AlertDialogDescription :class=\"[\n                                                'dark:text-gray-400',\n                                                'text-gray-600'\n                                            ]\">\n                                                This action cannot be undone. This will delete your question.\n                                            </AlertDialogDescription>\n                                        </AlertDialogHeader>\n                                        <AlertDialogFooter>\n                                            <AlertDialogCancel :class=\"[\n                                                'dark:bg-gray-700 dark:text-white dark:hover:bg-gray-600',\n                                                'bg-gray-200 text-gray-800 hover:bg-gray-300'\n                                            ]\">\n                                                Cancel</AlertDialogCancel>\n                                            <AlertDialogAction @click.stop=\"delete_record\"\n                                                class=\"bg-red-600 text-white hover:bg-red-700\">Delete\n                                            </AlertDialogAction>\n                                        </AlertDialogFooter>\n                                    </AlertDialogContent>\n                                </AlertDialog>\n                            </div>\n                        </div> -->\n                </div>\n            </div>\n            <CardDescription :class=\"[\n                'dark:text-gray-400',\n                'text-gray-600'\n            ]\">\n                <div class=\"flex items-center space-x-2 mt-2\">\n                    <img :src=\"question.user?.profile_photo || '/assets/front/images/user.png'\" alt=\"User Avatar\"\n                        class=\"w-6 h-6 rounded-full border\" :class=\"[\n                            'dark:border-gray-600',\n                            'border-gray-300'\n                        ]\">\n                    <span>{{ question.user ? question.user.name : 'Anonymous' }}</span>\n                </div>\n            </CardDescription>\n        </CardHeader>\n        <CardContent :class=\"[\n            'dark:text-gray-300',\n            'text-gray-700'\n        ]\">\n            <p>{{ question.content.substring(0, 200) }}...</p>\n        </CardContent>\n        <CardFooter class=\"flex items-center justify-between py-2 px-4 pt-0\">\n            <div class=\"flex items-center space-x-4\">\n                <span :title=\"question.likes_count+' Likes'\" class=\"text-gray-500 cursor-pointer hover:text-red-400\"><i class=\"fa-heart\" :class=\"question.liked ? 'fas text-red-500':'far'\" @click.stop=\"handleLike\"></i>&nbsp;{{ question.likes_count }}</span>\n                <span :title=\"question.comments_count+' Comments'\" class=\"text-gray-500 cursor-pointer hover:text-red-400\"><i class=\"far fa-messages\" @click.stop=\"handleComment\"></i>&nbsp;{{ question.comments_count }}</span>\n                <span :title=\"question.views_count+' Views'\" class=\"text-gray-500 cursor-pointer hover:text-red-400\"><i class=\"far fa-chart-column\"></i>&nbsp;{{ question.views_count }}</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <span :title=\"'Posted At'\" class=\"text-gray-500 cursor-pointer text-sm\">{{ question.posted_at }}</span>\n                <span class=\"bg-red-400 w-[5px] h-[5px] rounded\"></span>\n                <span :title=\"'Share Post'\" class=\"text-gray-500 cursor-pointer hover:text-red-400\"><i class=\"far fa-paper-plane-top\" @click.stop=\"handleShare\"></i></span>\n            </div>\n        </CardFooter>\n    </Card>\n</template>\n<style scoped>\n.mention-link {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    border-radius: 0.25rem;\n}\n\n.mention-link.dark {\n    color: rgb(96 165 250);\n    background-color: rgba(96, 165, 250, 0.1);\n}\n\n.mention-link.light {\n    color: rgb(37 99 235);\n    background-color: rgba(37, 99, 235, 0.1);\n}\n\n.mention-link:hover {\n    text-decoration: underline;\n}\n</style>","<script setup>\nimport { cn } from '/resources/js/lib/utils';\n\nconst props = defineProps({\n  class: { type: null, required: false },\n});\n</script>\n\n<template>\n  <div :class=\"cn('animate-pulse rounded-md bg-muted', props.class)\" />\n</template>\n","<script setup>\nimport { watch, ref, defineEmits, computed } from 'vue';\nimport PostCard from '../feed/PostCard.vue'\nimport QuestionCard from '../qna/QuestionCard.vue'\nimport { Skeleton } from '../ui/skeleton'\nimport { useAuthStore } from '../../stores/auth.js';\n\nconst authStore = useAuthStore();\nconst pagination = ref(null)\nconst l_count = ref(null)\nconst pageNo = ref(1)\nconst records = ref([])\nconst loading = ref(false);\nconst last_item = ref(1)\nconst { fetchKey, username, scrolling } = defineProps(['fetchKey', 'username', 'scrolling'])\nconst emit = defineEmits(['share_url'])\n\nconst url = computed(() => {\n    if (scrolling == 'post') return '/api/v1/feed?page=' + pageNo.value;\n    else if (scrolling == 'qna') return '/api/v1/questions-feed?page=' + pageNo.value;\n})\n\nconst fetch = () => {\n    pageNo.value = 1\n    records.value = []\n}\n\nconst index = async () => {\n    if (loading.value) return;\n    loading.value = true;\n    await axios.post(url.value, {\n        username: username,\n    }, authStore.config).then((res) => {\n        records.value.push(...res.data.records.data);\n        l_count.value = res.data.records.data.length\n        loading.value = false;\n        pagination.value = {\n            \"page\": res.data.records.current_page,\n            \"pageSize\": res.data.records.per_page,\n            \"pageCount\": res.data.records.last_page,\n            \"total\": res.data.records.total\n        }\n    })\n}\n\nconst post_deleted = (value) => {\n    records.value = records.value.filter(i => i.post_code !== value)\n}\n\nconst question_deleted = (value) => {\n    records.value = records.value.filter(i => i.slug !== value)\n}\n\nconst view_more = () => {\n    if (l_count.value > 0) {\n        pageNo.value++\n        index()\n    }\n}\n\nconst share_url = (url) => {\n    emit('share_url', url)\n}\n\nconst like_action = async (data) => {\n    records.value.find((post, index) => {\n        if (post.post_code === data[0]) {\n            records.value[index].liked = data[1]\n            if (data[1]) {\n                records.value[index].likes_count++\n            } else {\n                records.value[index].likes_count--\n            }\n        }\n    })\n}\n\nindex()\nwatch(pageNo, async (value) => { index() })\nwatch(() => fetchKey, async (value) => { fetch() })\n</script>\n<template>\n    <div class=\"max-w-2xl mx-auto flex flex-col gap-4 sm:px-6 pb-5 infinite-scroll-container\">\n        <TransitionGroup name=\"fade\" appear>\n            <component\n                :is=\"scrolling === 'post' ? PostCard : QuestionCard\"\n                v-for=\"(item, index) in records\"\n                :key=\"index\"\n                @share_url=\"share_url\"\n                @fetch=\"fetch\"\n                @liked_action=\"like_action\"\n                @delete_post=\"post_deleted\"\n                @delete_question=\"question_deleted\"\n                @load_more=\"view_more\"\n                :class=\"index === (records.length - last_item) ? 'last_item' : ''\"\n                v-bind=\"{ [scrolling === 'post' ? 'post' : 'question']: item }\"\n            />\n        </TransitionGroup>\n        <Transition class=\"mx-auto\" name=\"fade\">\n            <div v-if=\"loading\" class=\"gap-4 grid max-w-2xl mx-auto w-full\">\n                <Skeleton v-for=\"i in 5\" :key=\"i\" class=\"w-full\" :class=\"scrolling == 'post' ? 'h-[300px]' : 'h-[200px]'\" />\n            </div>\n        </Transition>\n    </div>\n</template>\n"],"names":["EllipsisVertical","createLucideIcon","toast","useToast","element","ref","showDropdown","emit","__emit","router","useRouter","authStore","useAuthStore","question_url","computed","__props","goToQuestion","id","onMounted","_a","checkItem","delete_record","axios","entries","entry","handleLike","response","handleComment","handleShare","props","pagination","l_count","pageNo","records","loading","last_item","url","fetch","index","res","post_deleted","value","i","question_deleted","view_more","share_url","like_action","data","post","watch"],"mappings":"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","x_google_ignoreList":[0]}